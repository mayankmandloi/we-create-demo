{"version":3,"sources":["assets/discovery-white.svg","assets/research-and-project-estimation.svg","assets/wireframe.svg","assets/ui.svg","repository/getjoke.js","view/header/Header.js","reducer/todo.js","reducer/index.js","view/form/FormConnector.js","actionCreator/todoAction.js","view/form/Form.js","view/section/Section.js","view/section/visualdesign/VisualDesignImage.js","view/section/visualdesign/VisualDesignContent.js","view/section/designprocess/DesignProcess.js","view/section/lifecycle/LifeCycle.js","view/section/productdesign/ProductDesign.js","view/section/uxdesign/UserExperinceDesign.js","view/section/visualdesignsecondary/VisualDesignSecondaryImage .js","view/section/visualdesignsecondary/VisualDesignSecondaryContent.js","App.js","serviceWorker.js","index.js"],"names":["module","exports","getData","a","fetch","data","json","jsonData","value","Header","props","useState","randomText","setRandomText","getJokeData","text","useEffect","className","key","to","goto","defaultState","dob","email","firstName","gender","lastName","reducers","combineReducers","todos","state","action","type","todo","index","newState","splice","mapDispatchToProps","addTodo","editTodo","connect","todoList","currentTodo","saveTodo","event","saved","target","id","preventDefault","handleChange","name","dataset","onClick","map","item","entry","onChange","data-index","checked","FormEle","Section","children","VisualDesignImage","VisualDesignContent","DesignProcess","LifeCycle","src","Research","alt","Discovery","Wireframe","UiApplication","ProductDesign","UserExperinceDesign","VisualDesignSecondaryImage","VisualDesignSecondaryContent","App","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","data-testid","path","FormConnector","Boolean","location","hostname","match","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","console","message"],"mappings":"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","file":"static/js/main.b9a0615b.chunk.js","sourcesContent":["module.exports = __webpack_public_path__ + \"static/media/discovery-white.ba965527.svg\";","module.exports = __webpack_public_path__ + \"static/media/research-and-project-estimation.bb651591.svg\";","module.exports = __webpack_public_path__ + \"static/media/wireframe.6b180f99.svg\";","module.exports = __webpack_public_path__ + \"static/media/ui.9acdac4b.svg\";","export const getData = async () => {\r\n    const data= await fetch(\"https://api.chucknorris.io/jokes/random\");\r\n    const jsonData = await data.json()\r\n    return jsonData.value;\r\n}","import React, { useState, useEffect } from 'react';\r\nimport './Header.css'\r\nimport { Link } from 'react-router-dom';\r\nimport { getData } from '../../repository/getjoke';\r\n\r\nexport const Header = (props) => {\r\n\r\n    const [randomText, setRandomText] = useState('');\r\n    const getJokeData= async () => {\r\n        const text = await getData();\r\n        setRandomText(text);\r\n    } \r\n    useEffect(() => {\r\n        getJokeData()\r\n    },[])\r\n    return ([\r\n        <div className=\"header-left\" key=\"header-left\">\r\n            <Link to={props.goto} className=\"simple-link\">{props.goto}</Link>,\r\n            <h2>Product Design</h2>\r\n            <p>Implement/design below page with css(donâ€™t use bootstrap) and React-Redux. Make fake api calls with waiting of 2-3 seconds and after that return hardcoded data. Page design should be mobile friendly.</p>\r\n            <p>{randomText}</p>\r\n        </div>,\r\n        <div className=\"header-right\" key=\"header-right\">\r\n        </div>\r\n    ]);\r\n}","const defaultState = [\r\n    {\r\n    dob:\"\",\r\n    email:\"\",\r\n    firstName: \"\",\r\n    gender: \"\",\r\n    lastName: \"\"\r\n    }\r\n]\r\nexport const todos = (state=defaultState, action) => {\r\n    switch(action.type) {\r\n        case 'ADD_NEW_TODO':\r\n            return[\r\n                ...state,\r\n                action.todo\r\n            ]\r\n        case 'EDIT_TODO':\r\n            const todo = state[action.index];\r\n            const newState = [...state];\r\n            newState.splice(action.index, 1, {...todo, ...action.todo});\r\n            return newState;\r\n\r\n        default: \r\n        return state;\r\n    }\r\n    }","import {combineReducers} from 'redux';\r\nimport {todos} from './todo'\r\n\r\nconst reducers = combineReducers({\r\n    todos\r\n});\r\n\r\nexport default reducers;","import {connect} from 'react-redux';\r\nimport {addTodo, editTodo} from '../../actionCreator/todoAction'\r\nimport { Form } from './Form';\r\n\r\n    const mapStateToProps = (state) => {\r\n        return {\r\n            todoList: state.todos\r\n        }\r\n    };\r\n\r\n    const mapDispatchToProps = {addTodo, editTodo};\r\n\r\n    export default connect (mapStateToProps, mapDispatchToProps) (Form);","export const addTodo = (todo) => {\r\n    return {\r\n        todo,\r\n        type: 'ADD_NEW_TODO'\r\n    }\r\n};\r\n\r\nexport const editTodo = (index, todo) => {\r\n    return {\r\n        index,\r\n        todo,\r\n        type: 'EDIT_TODO'\r\n    }\r\n}","import React from 'react';\r\nimport \"./Form.css\"\r\nexport const Form = (props) => {\r\n    let currentTodo = {};\r\n    const addNewTodo = (event) => {\r\n        props.addTodo({todo: currentTodo})\r\n        event.preventDefault();\r\n    }\r\n    const saveTodo = (event) => {\r\n        currentTodo.saved=true;\r\n        props.editTodo(event.target.id, currentTodo);\r\n        event.preventDefault();\r\n    }\r\n    const handleChange = (event) => {\r\n        const key = event.target.name;\r\n        const value = event.target.value;\r\n        props.editTodo(event.target.dataset.index, {[key]:value});\r\n        currentTodo[event.target.name]= event.target.value;\r\n      };\r\n    const FormEle = (entry, index) => <form key={index}>\r\n        <input onChange={handleChange} type='text' name='firstName' value={entry.firstName} data-index={index}/> \r\n        <input onChange={handleChange} type='text' name='lastName'value={entry.lastName} data-index={index}/> \r\n        <input onChange={handleChange} type='email' name='email'value={entry.email} data-index={index}/>\r\n        <input onChange={handleChange} type='radio' name='gender' value='male' data-index={index} checked={entry.gender==='male'}/> Male\r\n        <input onChange={handleChange} type='radio' name='gender' value='female' data-index={index} checked={entry.gender==='female'}/> Female\r\n        <input onChange={handleChange} type='date' name='dob'value={entry.dob} data-index={index}/>\r\n        <button onClick={saveTodo} id={index}>Save</button>\r\n    </form>;\r\n\r\n    const savedEle = (entry) => {\r\n    return (\r\n    <p>{`Name:- ${entry.firstName || ''} ${entry.lastName|| ''}, email:- ${entry.email || ''}, gender:- ${entry.gender || ''} dob:- ${entry.dob || ''}`}</p>);\r\n    }\r\n\r\nreturn (<>\r\n    <button className=\"addButton\"><h3 onClick={addNewTodo}>Add New Todo</h3></button>\r\n    <div className='formData'>\r\n    {[...props.todoList].map((item, index)=>item.saved ? savedEle(item) : FormEle(item, index))}\r\n    </div>\r\n    </>\r\n);\r\n}","import React from 'react';\r\nimport \"./Section.css\";\r\n\r\nexport const Section = (props) => {\r\n    return (\r\n        <div className=\"section\">\r\n        {props.children}\r\n        </div>\r\n    )\r\n}","import React from 'react';\r\n\r\nexport const VisualDesignImage = () => {\r\n    return (\r\n    <div className=\"visualDesignImage\"></div>\r\n    );\r\n}","import React from 'react';\r\nimport './VisualDesign.css';\r\n\r\nexport const VisualDesignContent = () => {\r\n    return (\r\n    <div className=\"VisualDesignContent\">\r\n    <h2>More then visual design, more then interactions</h2>\r\n    <p>Implement/design below page with css(donâ€™t use bootstrap) and React-Redux. Make fake api calls with waiting of 2-3 seconds and after that return hardcoded data. Page design should be mobile friendly.  </p>\r\n  </div>\r\n  );\r\n} ","import React from 'react';\r\nimport './DesignProcess.css'\r\nexport const DesignProcess = () => {\r\n    return (\r\n        <div className=\"design-process\">\r\n            <h2>Our Design Process</h2>\r\n            <p>Every decision we make is informed and goal oriented with the user journey in mind Designing with a</p>\r\n        </div>\r\n  );\r\n}","import React from 'react';\r\nimport './LifeCycle.css';\r\nimport Discovery from '../../../assets/discovery-white.svg';\r\nimport Research from '../../../assets/research-and-project-estimation.svg';\r\nimport Wireframe from '../../../assets/wireframe.svg';\r\nimport UiApplication from '../../../assets/ui.svg';\r\n\r\nexport const LifeCycle = () => {\r\n    return (<div className=\"life-cycle\">\r\n    <div className=\"research\">\r\n      <div className=\"research-image\">\r\n        <img src={Research} alt=\"Research\"/>\r\n      </div>\r\n      <h3>2. Research + Project Estimation</h3>\r\n    </div>\r\n    <div className=\"discovery\">\r\n      <div className=\"discovery-image\">\r\n        <img src={Discovery} alt=\"Discovery\"/>\r\n      </div>\r\n      <h3>1. Discovery</h3>\r\n    </div>\r\n    <div className=\"design-process-description\">\r\n      <p>We sit down with you to discuss your business goal and your targer audience. We determine the problem you are trying to solve, and together, we define the key feature of the app/software you are trying to build</p>\r\n    </div>\r\n    <div className=\"wireframe\">\r\n      <div className=\"wireframe-image\">\r\n        <img src={Wireframe} alt=\"Wireframe\"/>\r\n      </div>\r\n      <h3>3. UX Wireframe</h3>\r\n    </div>\r\n    <div className=\"ui-application\">\r\n      <div className=\"ui-application-image\">\r\n        <img src={UiApplication} alt=\"UiApplication\"/>\r\n      </div>\r\n      <h3>4. UI Application</h3>\r\n    </div>\r\n\r\n  </div>);\r\n}","import React from 'react';\r\nimport './ProductDesign.css';\r\n\r\nexport const ProductDesign = () => {\r\n    return (\r\n        <div className=\"product-design-service\">\r\n                <h1>Product Design Service</h1>\r\n                <div className=\"product-design-service-item\">\r\n                  <h4>User Experince Design</h4>\r\n                </div>\r\n                <div className=\"product-design-service-item\">\r\n                  <h4>Visual Design</h4>\r\n                </div>\r\n                <div className=\"product-design-service-item\">\r\n                  <h4>Prototyping</h4>\r\n                </div>\r\n                <div className=\"product-design-service-item\">\r\n                  <h4>Content Design</h4>\r\n                </div>\r\n                <div className=\"product-design-service-item\">\r\n                  <h4>Design System</h4>\r\n                </div>\r\n                <div className=\"product-design-service-item\">\r\n                  <h4>Voice, Chatbot & multimodal UI </h4>\r\n                </div>\r\n              </div>\r\n    );\r\n}","import React from 'react';\r\nimport './UserExperinceDesign.css'\r\n\r\nexport const UserExperinceDesign = () => {\r\n    return (\r\n        <>\r\n            <div className=\"UserExperinceDesignContent\">\r\n                <h2>User Experince Design</h2>\r\n                <p>Implement/design below page with css(donâ€™t use bootstrap) and React-Redux. Make fake api calls with waiting of 2-3 seconds and after that return hardcoded data. Page design should be mobile friendly.  </p>\r\n            </div>\r\n            <div className=\"UserExperinceDesignImage\"></div>\r\n        </>\r\n    );\r\n}","import React from 'react';\r\nimport './VisualDesignSecondary.css';\r\n\r\n\r\nexport const VisualDesignSecondaryImage = () => (<div className=\"VisualDesignSecondaryImage\"></div>)","import React from 'react';\r\nimport './VisualDesignSecondary.css';\r\n\r\nexport const VisualDesignSecondaryContent = () =>\r\n        (<div className=\"VisualDesignSecondaryContent\">\r\n            <h2>visual design</h2>\r\n            <p>Implement/design below page with css(donâ€™t use bootstrap) and React-Redux. Make fake api calls with waiting of 2-3 seconds and after that return hardcoded data. Page design should be mobile friendly.  </p>\r\n        </div>)","import React from 'react';\r\nimport {\r\n  BrowserRouter as Router,\r\n  Route,\r\n  Switch,\r\n  Redirect\r\n} from 'react-router-dom';\r\n\r\nimport { Header } from './view/header/Header'\r\nimport './App.css';\r\nimport { Provider } from 'react-redux';\r\nimport { createStore } from 'redux';\r\nimport reducers from './reducer';\r\nimport FormConnector from './view/form/FormConnector';\r\nimport { Section } from './view/section/Section';\r\nimport { VisualDesignImage } from './view/section/visualdesign/VisualDesignImage';\r\nimport { VisualDesignContent } from './view/section/visualdesign/VisualDesignContent';\r\nimport { DesignProcess } from './view/section/designprocess/DesignProcess';\r\nimport { LifeCycle } from './view/section/lifecycle/LifeCycle';\r\nimport {ProductDesign} from './view/section/productdesign/ProductDesign';\r\nimport { UserExperinceDesign } from './view/section/uxdesign/UserExperinceDesign';\r\nimport { VisualDesignSecondaryImage } from './view/section/visualdesignsecondary/VisualDesignSecondaryImage ';\r\nimport { VisualDesignSecondaryContent } from './view/section/visualdesignsecondary/VisualDesignSecondaryContent';\r\n\r\nfunction App() {\r\n  const store = createStore(reducers, window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__())\r\n  return (\r\n    <Router>\r\n      <Provider store={store}>\r\n        <div className=\"main-parent\" data-testid=\"main-parent\">\r\n          <Switch>\r\n            <Route path=\"/form\">\r\n              <Header goto='home'></Header>\r\n              <FormConnector></FormConnector>\r\n            </Route>\r\n            <Route path='/home'>\r\n              <Redirect to='/'/>\r\n            </Route>\r\n            <Route path=\"/\">\r\n              <Header goto='form'></Header>\r\n              <Section key=\"sec-1\">\r\n                <VisualDesignImage/>\r\n                <VisualDesignContent/>\r\n              </Section>\r\n               <Section key=\"sec-2\">\r\n                 <DesignProcess/>\r\n               </Section>\r\n              <Section key=\"sec-3\">\r\n                <LifeCycle/>\r\n              </Section>\r\n              <Section key=\"sec-4\">\r\n                <ProductDesign/>\r\n              </Section>\r\n              <Section key=\"sec-5\">\r\n                <UserExperinceDesign/>\r\n              </Section>\r\n              <Section key=\"sec-6\">\r\n                <VisualDesignSecondaryImage/>\r\n                <VisualDesignSecondaryContent/>\r\n              </Section>\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </Provider>\r\n    </Router>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}